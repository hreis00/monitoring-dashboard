version: "3"

services:
  heimdall:
    image: linuxserver/heimdall:2.6.3
    container_name: heimdall
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./config:/config
    environment:
      - PUID=${PUID}
      - PGID=${PGID}
      - TZ=${TZ}
    networks:
      - app-network
    restart: unless-stopped

  glances:
    image: nicolargo/glances:3.4.0.2-full
    container_name: glances
    pid: host
    network_mode: host
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
    environment:
      - GLANCES_OPT=-w
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:v2.45.0
    container_name: prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus:/etc/prometheus
      - prometheus_data:/prometheus
    command:
      - "--config.file=/etc/prometheus/prometheus.yml"
      - "--storage.tsdb.path=/prometheus"
      - "--web.console.libraries=/usr/share/prometheus/console_libraries"
      - "--web.console.templates=/usr/share/prometheus/consoles"
    restart: unless-stopped

  node-exporter:
    image: prom/node-exporter:v1.6.1
    container_name: node-exporter
    ports:
      - "9100:9100"
    volumes:
      - /proc:/host/proc:ro
      - /sys:/host/sys:ro
      - /:/rootfs:ro
    command:
      - "--path.procfs=/host/proc"
      - "--path.sysfs=/host/sys"
      - "--collector.filesystem.mount-points-exclude=^/(sys|proc|dev|host|etc)($$|/)"
    restart: unless-stopped

  ts-app-backend:
    image: node:18-alpine
    container_name: ts-app-backend
    working_dir: /app
    volumes:
      - ./ts-app/backend:/app
    ports:
      - "3000:3000"
    command: sh -c "npm install && npm run dev"
    networks:
      - app-network
    restart: unless-stopped

  ts-app-frontend:
    image: node:18-alpine
    container_name: ts-app-frontend
    working_dir: /app
    volumes:
      - ./ts-app/frontend:/app
    ports:
      - "3001:3001"
    command: sh -c "npm install && npm run dev"
    environment:
      - VITE_API_URL=http://localhost:3000
    depends_on:
      - ts-app-backend
    restart: unless-stopped

  grafana:
    image: grafana/grafana:10.1.2
    container_name: grafana
    ports:
      - "3002:3000"
    volumes:
      - grafana_data:/var/lib/grafana
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GF_SECURITY_ADMIN_PASSWORD}
      - GF_USERS_ALLOW_SIGN_UP=${GF_USERS_ALLOW_SIGN_UP}
    restart: unless-stopped

volumes:
  prometheus_data:
  grafana_data:

networks:
  app-network:
    driver: bridge
